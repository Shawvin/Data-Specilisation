write.csv(test[,1:2],"result3.csv",row.names = FALSE)
total$Age<-knnImputation(total[,-2])$Age
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv")
test<-read.csv("test.csv")
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
total$Age<-knnImputation(total[,-2])$Age
missingIndex<-which(total$Embarked=="")
total[missingIndex,]$Embarked<-c("S","S")
total$Fare<-knnImputation(total[,-2])$Fare
total$Survived<-as.factor(total$Survived)
train$Survived<-as.factor(train$Survived)
dim(total)
n=nrow(train)
train<-total[1:n,]
table(total$Pclass)
ggplot(train,aes(Pclass,fill=Survived))+geom_bar(position="fill")
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
table(total$Sex)
quantile(total$Age)
ggplot(train,aes(Sex,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(cut2(Age,18),fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(SibSp,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(Parch,fill=Survived))+geom_bar(position="fill")
str(total$Ticket)
tnum<-table(total$Ticket)
TicketType<-function(x){
ifelse(tnum[x]>1,"Shared","Single")
}
total$TicketType<-as.factor(sapply(as.character(total$Ticket),TicketType))
quantile(total$Fare)
ggplot(train,aes(cut2(Fare,g=4),fill=Survived))+geom_bar(position="fill")
table(total$Embarked)
ggplot(train,aes(Embarked,fill=Survived))+geom_bar(position="fill")
str(total$Ticket)
tnum<-table(total$Ticket)
TicketType<-function(x){
ifelse(tnum[x]>1,paste(tnum[x],"Shared",sep=""),"Single")
}
total$TicketType<-as.factor(sapply(as.character(total$Ticket),TicketType))
table(total$TicketType)
a=c(1,2,3,4,5,6,7,8,11)
b=c(713,264,147,64,35,24,35,16,11)
aa*b
a*b
sum(a*b)
sum(b)
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv")
test<-read.csv("test.csv")
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
total$Age<-knnImputation(total[,-2])$Age
missingIndex<-which(total$Embarked=="")
total[missingIndex,]$Embarked<-c("S","S")
total$Fare<-knnImputation(total[,-2])$Fare
total$Survived<-as.factor(total$Survived)
train$Survived<-as.factor(train$Survived)
dim(total)
n=nrow(train)
train<-total[1:n,]
table(total$Pclass)
ggplot(train,aes(Pclass,fill=Survived))+geom_bar(position="fill")
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
table(total$Sex)
quantile(total$Age)
ggplot(train,aes(Sex,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(cut2(Age,18),fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(SibSp,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(Parch,fill=Survived))+geom_bar(position="fill")
str(total$Ticket)
tnum<-table(total$Ticket)
TicketType<-function(x){
ifelse(tnum[x]>1,paste(tnum[x],"Shared",sep=""),"Single")
}
total$TicketType<-as.factor(sapply(as.character(total$Ticket),TicketType))
quantile(total$Fare)
ggplot(train,aes(cut2(Fare,g=4),fill=Survived))+geom_bar(position="fill")
table(total$Embarked)
ggplot(train,aes(Embarked,fill=Survived))+geom_bar(position="fill")
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="cv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit
modFit2
modFit3
test$Survived<-predict(modFit,test)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit3,test)
write.csv(test[,1:2],"result3.csv",row.names = FALSE)
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit
modFit2
modFit3
test$Survived<-predict(modFit,test)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit3,test)
write.csv(test[,1:2],"result3.csv",row.names = FALSE)
?trainControl
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="LOOCV")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit
modFit2
modFit3
test$Survived<-predict(modFit,test)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit3,test)
write.csv(test[,1:2],"result3.csv",row.names = FALSE)
names(total)
traindata<-train[,-c(1,4,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit
modFit2
modFit3
test$Survived<-predict(modFit,test)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit3,test)
write.csv(test[,1:2],"result3.csv",row.names = FALSE)
modFit4<-train(as.factor(Survived)~.,data=traindata,method="xgbTree",trControl=traincontrol)
modFit4<-train(as.factor(Survived)~.,data=traindata,method="xgbTree",trControl=traincontrol)
modFit4
test$Survived<-predict(modFit4,test)
table(test$Survived)
write.csv(test[,1:2],"result4.csv",row.names = FALSE)
rm(list=ls())
?log
log(10000,100)
log(10000,100)
a<-1:3
b<-c(1,4,9)
log(b,a)
suppressMessages(library(leaflet))
suppressMessages(library(RColorBrewer))
knitr::opts_chunk$set(echo = TRUE)
?addCircleMarkers
cities<-read.csv("worldcities.csv")
head(cities)
china_cities<-cities[cities$country=="China",]
head(china_cities)
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii, color=~col,clusterOptions = markerClusterOptions())
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii,weight = 7, color=~col,clusterOptions = markerClusterOptions())
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii,weight = 10, color=~col,clusterOptions = markerClusterOptions())
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii,radius = 5, color=~col,clusterOptions = markerClusterOptions())
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii,radius = 1, color=~col,clusterOptions = markerClusterOptions())
range(china_cities$population)
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii,radius = 14, color=~col,clusterOptions = markerClusterOptions())
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
china_cities$size<-log(china_cities$population,base=10)*2-3
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii,radius = 14, color=~col,clusterOptions = markerClusterOptions())
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
china_cities$size<-log(china_cities$population,base=10)*2-3
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii,radius = size, color=~col,clusterOptions = markerClusterOptions())
n<-length(unique(china_cities$admin_name))
china_cities$col<-rainbow(n)[as.factor(as.character(china_cities$admin_name))]
china_cities$size<-log(china_cities$population,base=10)*2-3
print(Sys.Date())
china_cities %>% leaflet() %>% addProviderTiles("Esri.WorldStreetMap") %>% addCircleMarkers(lat = ~lat,lng = ~lng,popup = ~city_ascii,radius = ~size, color=~col,clusterOptions = markerClusterOptions())
knitr::opts_chunk$set(echo = TRUE)
n=nrow(train)
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv")
test<-read.csv("test.csv")
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
total$Age<-knnImputation(total[,-2])$Age
missingIndex<-which(total$Embarked=="")
total[missingIndex,]$Embarked<-NA
total$Embarked<-knnImputation(total[,-2])$Embarked
total$Fare<-knnImputation(total[,-2])$Fare
total$Survived<-as.factor(total$Survived)
train$Survived<-as.factor(train$Survived)
dim(total)
n=nrow(train)
train<-total[1:n,]
table(total$Pclass)
ggplot(train,aes(Pclass,fill=Survived))+geom_bar(position="fill")
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
table(total$Sex)
quantile(total$Age)
ggplot(train,aes(Sex,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(cut2(Age,18),fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(SibSp,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(Parch,fill=Survived))+geom_bar(position="fill")
str(total$Ticket)
tnum<-table(total$Ticket)
TicketType<-function(x){
ifelse(tnum[x]>1,"Shared","Single")
}
total$TicketType<-as.factor(sapply(as.character(total$Ticket),TicketType))
quantile(total$Fare)
ggplot(train,aes(cut2(Fare,g=4),fill=Survived))+geom_bar(position="fill")
table(total$Embarked)
ggplot(train,aes(Embarked,fill=Survived))+geom_bar(position="fill")
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit
modFit2
modFit3
test$Survived<-predict(modFit,test)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit3,test)
write.csv(test[,1:2],"result3.csv",row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit
modFit2
modFit3
test$Survived<-predict(modFit,test)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit2,test)
write.csv(test[,1:2],"result2.csv",row.names = FALSE)
test$Survived<-predict(modFit3,test)
table(test$Survived)
write.csv(test[,1:2],"result3.csv",row.names = FALSE)
head(train)
strsplit(train$Name[1],"[,.]")
train$Name[1]
strsplit(as.character(train$Name[1]),"[,.]")
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
surname<-function(x){
strsplit(x,"[,.]")[[1]][1]
}
total$surname<-sapply(as.character(total$Name),title)
table(total$surname)
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
surname<-function(x){
strsplit(x,"[,.]")[[1]][1]
}
total$surname<-sapply(as.character(total$Name),surname)
table(total$surname)
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
surname<-function(x){
strsplit(x,"[,.]")[[1]][1]
}
total$surname<-sapply(as.character(total$Name),surname)
tsurname<-table(total$surname)
total$surname<-sapply(total$surname,function(x){if(tsurname$x<=2) small})
length(tsurname)
tsurname[1]
tsurname$Abbing
tsurname["Abbing"]
tsurname[Abbing]
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
surname<-function(x){
strsplit(x,"[,.]")[[1]][1]
}
total$surname<-sapply(as.character(total$Name),surname)
tsurname<-table(total$surname)
total$surname<-sapply(total$surname,function(x){if(tsurname[x]<=2) small})
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
surname<-function(x){
strsplit(x,"[,.]")[[1]][1]
}
total$surname<-sapply(as.character(total$Name),surname)
tsurname<-table(total$surname)
total$surname<-sapply(total$surname,function(x){if(tsurname[x]<=2) "small"})
table(total$surname)
?ifelse
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
surname<-function(x){
strsplit(x,"[,.]")[[1]][1]
}
total$surname<-sapply(as.character(total$Name),surname)
tsurname<-table(total$surname)
total$surname<-sapply(total$surname,function(x){ifelse(tsurname[x]<=2,"small",x)})
table(total$surname)
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit4<-train(as.factor(Survived)~.,data=traindata,method="nb",trControl=traincontrol)
modFit
modFit2
modFit3
modFit4
test$Survived<-predict(modFit,test)
table(total$surname)
table(test$surname)
getwd()
setwd("./Desktop/Coursera")
setwd("../Desktop/Coursera/Data-Specilisation/C9Week4/")
getwd()
dir()
?titanic
??titanic
?Titanic
??titanic
